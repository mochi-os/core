{{define "title"}}{{.Chat.Name}}{{end}}
{{template "head" .}}
<p class="header"><a href="/">Mochi</a> | <a href="/chat">Chat</a> | {{.Chat.Name}}</p>

<p id="messages"></p>
<form id="form">
	<input type="text" id="body" name="body" size="10000" style="width: 90%" autofocus onkeypress="keypress(event)"/>
	<input type="file" id="attachments" name="attachments" multiple>
	<input type="button" value="Send" onclick="message_send()"/>
</form>

<script>
const r = new XMLHttpRequest();
r.onload = function() { messages_receive( this.responseText ) }
r.open( 'GET', '/chat/{{.Chat.ID}}/messages' );
r.send();
const ws = new WebSocket( 'ws://' + window.location.host + '/websocket' );
ws.addEventListener( 'message', (event) => { message_receive( event.data ) } );

function escape( s ) {
	if ( s == undefined ) {
		return '[undefined]';
	}
	return s.replace( /&/g, '&amp;' ).replace( /</g, '&lt;' ).replace( />/g, '&gt;' ).replace( /"/g, '&quot;' );
}

function keypress( event ) {
	if ( event.key === 'Enter') {
		event.preventDefault();
		message_send();
	}
}

function message_receive( j ) {
	const m = JSON.parse( j )
	const c = JSON.parse( m.content );
	message_render( c );
}

function messages_receive( j ) {
	const ms = JSON.parse( j )
	for ( var i = 0; i < ms.length; i++ ) { 
		message_render( ms[i] );
	}
}

function message_render( c ) {
    const m = document.getElementById( 'messages' );
    m.innerHTML += '<br/>' + escape( c.Name + ': ' + c.Body );

	if ( c.Attachments != null ) {
		var div = document.createElement( 'div' );
		div.style = 'overflow-x: auto; white-space: nowrap;';
		for ( var i = 0; i < c.Attachments.length; i++ ) {
			const at = c.Attachments[i];
			var a = document.createElement( 'a' );
			a.href = '/attachments/' + escape( at.Entity ) + '/' + escape( at.ID ) + '/' + escape( at.Name );
			a.style = 'z-index: 2;';
			if ( at.Image ) {
				var img = document.createElement( 'img' );
				img.src = '/attachments/' + escape( at.Entity ) + '/' + escape( at.ID ) + '/thumbnail';
				img.title = at.Name;
				a.appendChild( img );
			} else {
				var span = document.createElement( 'span' );
				span.style = 'display: inline-block; white-space: pre-line;';
				span.innerHTML = escape( at.Name ) + '<br/>' + at.Size + ' bytes';
				a.appendChild( span );
			}
			div.appendChild( a );
			div.innerHTML += '&nbsp;';
		}
		m.appendChild( div );
	}

    window.scrollTo( 0, document.body.scrollHeight );
}

function message_send() {
	fetch( window.location.origin + '/chat/{{.Chat.ID}}/send', { method: 'post', body: new FormData( document.getElementById( 'form' ) ) } );
	document.getElementById( 'body' ).value = '';
	document.getElementById( 'attachments' ).value = '';
}
</script>

{{template "foot" .}}
